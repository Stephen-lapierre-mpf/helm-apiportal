apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-portal-{{ .Values.deployto.name }}
  namespace: api-portal
  labels:
    app: api-portal-{{ .Values.deployto.name }}
    environment: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-portal-{{ .Values.deployto.name }}
  template:
    metadata:
      labels:
        app: api-portal-{{ .Values.deployto.name }}
    spec:
      imagePullSecrets:
      - name: xaxissecret
      
      containers:
        - name: api-portal
          image: {{ .Values.mountImage.prod}}
          imagePullPolicy: Always
      
          ports:
          - containerPort: 8000
          - containerPort: 3306
          - containerPort: 2025
          resources:
            requests:
              memory: "256Mi"
              cpu: "750m"
            limits:
              memory: "1024Mi"
              cpu: "2000m"
          volumeMounts:
          - mountPath: /data
            name: vol-drupal
          - mountPath: /var/www/web/sites
            name: vol-drupal
            subPath: sites
          - mountPath: /var/www/web/modules
            name: vol-drupal
            subPath: modules
          - mountPath: /var/www/web/core
            name: vol-drupal
            subPath: core
          env:
            - name: MYDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: api-portal-map-{{ .Values.deployto.name }}
                  key: MYDB_DATABASE
            - name: MYDB_USER
              valueFrom:
                configMapKeyRef:
                  name: api-portal-map-{{ .Values.deployto.name }}
                  key: MYDB_USER
            - name: MYDB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: api-portal-map-{{ .Values.deployto.name }}
                  key: MYDB_PASSWORD
            - name: MYDB_HOST
              valueFrom:
                configMapKeyRef:
                  name: api-portal-map-{{ .Values.deployto.name }}
                  key: MYDB_HOST
      volumes:
        - name: vol-drupal
          persistentVolumeClaim: 
            claimName: api-portal-pv-claim-{{.Values.deployto.name }}
      initContainers:
        - name: init-api-portal
      initContainers:
        - name: init-api-portal
          image: {{ .Values.mountImage.prod}}
          volumeMounts:
          - mountPath: /data
            name: vol-drupal
          command: ['/bin/bash', '-c']
          args: ['cp -r /var/www/web/sites /data; cp -r /var/www/web/modules /data; cp -r /var/www/web/core /data; chown -R www-data:www-data /data/*']
          volumeMounts:
          - mountPath: /data
            name: vol-drupal
          command: ['/bin/bash', '-c']
          args: ['cp -r /var/www/web/sites /data; cp -r /var/www/web/modules /data; cp -r /var/www/web/core /data; chown -R www-data:www-data /data/*']
